Sub Main ()

    Dim currentDoc As AssemblyDocument = ThisDoc.Document
    Dim leafOccurrences As ComponentOccurrencesEnumerator = currentDoc.ComponentDefinition.Occurrences.AllLeafOccurrences

    ' This macro browse lets you browse the location and add it as an invisible custom property.
	' NOTE FOR THE USER: turn into comment the line below if you want to run the macro separately. 
	InventorVb.RunMacro("ApplicationProject", "ModFileBrowser", "BrowseLocationForDxf")

    ' Access the property set created int the macro ran previously
    Dim dxfData As PropertySet = currentDoc.PropertySets.Item("dxf Export Data")
	targetLocation = dxfData.Item("Location").Value
	
    'Input target location by copy and paste 
	
    'targetLocation = InputBox("Copy and paste the path where you want the dxf files to be created","Location for dxf")
	'targetLocation = targetLocation & "\"
	
	Dim listkeyStrings As New List(Of String)
	
    For Each compOccurrence As ComponentOccurrence In leafOccurrences
		
		If compOccurrence.Suppressed Or TypeOf compOccurrence.Definition.Document IsNot PartDocument Then
        
		Else
			
	        'MsgBox(compOccurrence.Name)
			
			
            Dim occDoc As PartDocument = compOccurrence.Definition.Document
            
            ' Check for sheet metal
            If occDoc.ComponentDefinition.Type = kSheetMetalComponentDefinitionObject Then
		    
			' Check if part is a replica of an existing one    
		        nameToCheck = trimName(compOccurrence.Name, 2) ' Removes the 2 last chars of the occ name, for example: ":1"
		        If listkeyStrings.Contains(nameToCheck) Then
		
		        Else
			       listkeyStrings.Add(nameToCheck)
		    
                Dim smCompDef As SheetMetalComponentDefinition = occDoc.ComponentDefinition
                
                ' verifies if there is flat pattern and creates one if there is not
                If Not smCompDef.HasFlatPattern Then
                    smCompDef.Unfold()
                End If
                
                ' Gets flat pattern
                Dim flatPattern As FlatPattern = smCompDef.FlatPattern
                
	            ' Gets name for dxf file
			    Dim desiredDisplayName As String = trimName(occDoc.DisplayName,4) 'removes 4 chars: ".ipt"
			    'MsgBox(desiredDisplayName)
				
                ' Creates file name
                Dim fileName As String = System.IO.Path.Combine(targetLocation, desiredDisplayName & ".dxf") 
                'MsgBox(fileName & " has been added")
				
                ' Export to DXF
                flatPattern.DataIO.WriteDataToFile("FLAT PATTERN DXF?AcadVersion=2018", fileName)
                
                End If
            End If
        End If
        Next
    MsgBox("All dxf files have been added to the chosen location")
End Sub


Function trimName (nameToTrim As String, noChar As Integer )

   Dim limSup As Integer = Len(nameToTrim) 
   Dim limInf As Integer = limSup - noChar
   Dim trimmedString As String = nameToTrim
   
   trimmedString = trimmedString.Remove(limInf)
   Return trimmedString
   
End Function

